name: Build

on: [push]

jobs:
  code_check_for_api:
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: api
    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.12

      - name: Setup pipenv
        run: pip install pipenv

      - name: Cache virtualenvs
        uses: actions/cache@v4
        id: api_cache
        with:
          path: ~/.local/share/virtualenvs
          key: ${{ runner.OS }}-lib-${{ hashFiles('api/Pipfile.lock') }}

      - name: Install dependencies
        if: steps.api_cache.outputs.cache-hit != 'true'
        run: pipenv install -d

      - name: Execute code check
        run: pipenv run code_check

  code_check_for_generate_model:
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: generate_model
    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.12

      - name: Setup pipenv
        run: pip install pipenv

      - name: Cache virtualenvs
        uses: actions/cache@v4
        id: generate_model_cache
        with:
          path: ~/.local/share/virtualenvs
          key: ${{ runner.OS }}-lib-${{ hashFiles('generate_model/Pipfile.lock') }}

      - name: Install dependencies
        if: steps.generate_model_cache.outputs.cache-hit != 'true'
        run: pipenv install -d

      - name: Execute code check
        run: pipenv run code_check

  notify_slack:
    if: ${{ always() && !contains(github.ref, 'dependabot/') }}
    needs:
      - code_check_for_api
      - code_check_for_generate_model
    runs-on: ubuntu-20.04
    steps:
      - uses: technote-space/workflow-conclusion-action@v3
      - name: Notify to Slack
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ env.WORKFLOW_CONCLUSION }}
          author_name: GitHub Actions
          fields: repo,message,author,ref
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SLACK_WEBHOOK_URL: ${{ secrets.NOTIFY_SLACK_WEBHOOK_URL }}
